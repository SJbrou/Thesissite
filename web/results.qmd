---
title: "Results"
author: "Stan Brouwer"
format:
  html:
    toc: true
    toc-location: left
    toc-depth: 1
    embed-resources: true
    # standalone: true
    smooth-scroll: true
    page-layout: full
    code-fold: show
    grid:
      sidebar-width: 180px
editor: source
number-sections: false
---

This is the code used to identify and cut out each of the lifts from the IMU's data. This process has been repeated for each subject, and the resulting data is stored as seperate R dataframe files for further analysis. The process is described below

::: column-page-right
Lets load all functions from the previous chapter. This is a hassle since they are stored in Quarto markdown language, and R only accept real R code.

```{r LoadData, message = FALSE, verbose = FALSE}
# Clean workspace
rm(list = ls())
library(tidyr)
library(dplyr)
library(plotly)
library(ggplot2)
library(knitr)
library(lubridate)

# Most dependencies are loaded by loading datafiltering.qmd.
# To load only the chuncks containing functions we need parsermd
library(parsermd)

toload <- c("load_data","load_plots", "filter_data", "separate_lifts", "visualise_seperate_lifts")
rmd <- parse_rmd("datafiltering.qmd")


for (i in seq_along(toload)) {
  setup_chunk <- rmd_select(rmd, toload[i]) |> 
    as_document()

  setup_chunk <- setup_chunk[-grep("```", setup_chunk)]
  setup_chunk
#> [1] "library(tidyr)"   "library(stringr)" ""                

  eval(parse(text = setup_chunk))             
}
rm(rmd, i, setup_chunk, toload)
```

:::
